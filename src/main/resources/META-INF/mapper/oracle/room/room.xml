<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.basquiat.com.basquiat.chat.room.mapper.RoomMapper">
	
	<!-- room list resultMap -->
	<resultMap id="roomListResultMap" type="com.basquiat.com.basquiat.chat.room.vo.RoomVo">
		<id property="roomId" 					column="ROOM_ID"/>
		<result property="roomTitle" 			column="ROOM_TITLE"/>
		<result property="establisherId" 		column="ESTABLISHER_ID"/>
		<result property="establisherName"	column="ESTABLISHER_NAME"/>   
		<result property="regDttm"				column="REGDTTM"/>
		<collection property="messageReadVo"	resultMap="readMessageResultMap"/>
		<collection property="followerList"		javaType="java.util.ArrayList" resultMap="followerListResultMap"/>
	</resultMap>
	
	<!-- read message resultMap -->	
	<resultMap id="readMessageResultMap" type="com.basquiat.com.basquiat.chat.message.vo.MessageReadVo">
	    <result property="roomId" 	   			column="ROOM_ID"/>
		<result property="userId"				column="USER_ID"/>
		<result property="messageCount"		column="MESSAGE_COUNT"/>
	</resultMap>
		
	<!-- follower list resultMap -->	
	<resultMap id="followerListResultMap" type="com.basquiat.com.basquiat.chat.follower.vo.FollowerVo">
	    <result property="followerId" 	   	column="FOLLOWER_ID"/>
		<result property="followerName"	column="FOLLOWER_NAME"/>
	</resultMap>
	
	<!-- Room 생성 -->	
	<insert id="insertRoom" parameterType="com.basquiat.com.basquiat.chat.room.vo.RoomVo">
		INSERT INTO	${defaultTablePrefix}CHATTING_ROOM
		(
		 ROOM_TITLE,			<!-- 방 타이틀 -->	
		 ESTABLISHER_ID,		<!-- 개설자 아이디  -->
		 ESTABLISHER_NAME,	<!-- 개설자 이름 -->
		 REGDTTM				<!-- 방 생성 일시 -->
        ) 
        
        VALUES

        (
         #{roomTitle,				jdbcType=VARCHAR},	   
         #{establisherId, 		jdbcType=VARCHAR},
         #{establisherName,	jdbcType=VARCHAR},      
 		 SYSDATE
 		 )
 		<selectKey keyProperty="roomId" resultType="long" order="AFTER">
        	SELECT last_insert_id()
        </selectKey>
    </insert>
    
    <!-- userId가 포함된 room list 조회 -->
	<select id="selectAllRoomById" parameterType="string" resultMap="roomListResultMap">
		SELECT 
			CR.ROOM_ID,
			CR.ROOM_TITLE,
			CR.ESTABLISHER_ID,
			CR.ESTABLISHER_NAME,
			CR.REGDTTM,
			CRR.ROOM_ID,
			CRR.USER_ID,
			CRR.MESSAGE_COUNT,
			CF.FOLLOWER_ID,
			CF.FOLLOWER_NAME
		FROM ${defaultTablePrefix}CHATTING_ROOM CR
			 LEFT OUTER JOIN ${defaultTablePrefix}CHATTING_READ CRR ON CR.ROOM_ID = CRR.ROOM_ID AND CRR.USER_ID = #{userId}
			 LEFT OUTER JOIN ${defaultTablePrefix}CHATTING_FOLLOWER CF ON CF.ROOM_ID = CR.ROOM_ID
			 LEFT OUTER JOIN ${defaultTablePrefix}CHATTING_FOLLOWER CFF ON CFF.ROOM_ID = CR.ROOM_ID
		WHERE CFF.FOLLOWER_ID = #{userId}
	</select>
	
    <!-- 사용자가 개설한 room list 조회 -->
	<select id="selectRoomByEstablisherId" parameterType="string" resultMap="roomListResultMap">
		SELECT 
			CR.ROOM_ID,
			CR.ROOM_TITLE,
			CR.ESTABLISHER_ID,
			CR.ESTABLISHER_NAME,
			CR.REGDTTM,
			CRR.ROOM_ID,
			CRR.USER_ID,
			CRR.MESSAGE_COUNT,   
			CF.FOLLOWER_ID,
			CF.FOLLOWER_NAME
		FROM ${defaultTablePrefix}CHATTING_ROOM CR
			 LEFT OUTER JOIN ${defaultTablePrefix}CHATTING_READ CRR ON CR.ROOM_ID = CRR.ROOM_ID AND CRR.USER_ID = #{establisherId}
			 LEFT OUTER JOIN ${defaultTablePrefix}CHATTING_FOLLOWER CF ON CF.ROOM_ID = CR.ROOM_ID
		WHERE CR.ESTABLISHER_ID = #{establisherId}
	</select>
	
	<!-- roomId에 해당하는 room 조회 -->
	<select id="selectRoomById" parameterType="long" resultMap="roomListResultMap">
		SELECT 
			CR.ROOM_ID,
			CR.ROOM_TITLE,
			CR.ESTABLISHER_ID,
			CR.ESTABLISHER_NAME,
			CR.REGDTTM,
			CRR.ROOM_ID,
			CRR.USER_ID,
			CRR.MESSAGE_COUNT,
			CF.FOLLOWER_ID,
			CF.FOLLOWER_NAME
		FROM ${defaultTablePrefix}CHATTING_ROOM CR
			 LEFT OUTER JOIN ${defaultTablePrefix}CHATTING_FOLLOWER CF ON CF.ROOM_ID = CR.ROOM_ID
		WHERE CR.ROOM_ID = #{roomId}
	</select>
</mapper>